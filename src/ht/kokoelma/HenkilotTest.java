package ht.kokoelma;
// Generated by ComTest BEGIN
import java.io.File;
import static org.junit.Assert.*;
import org.junit.*;
import ht.kokoelma.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2016.04.19 16:39:15 // Generated by ComTest
 *
 */
public class HenkilotTest {



  // Generated by ComTest BEGIN
  /** 
   * testGet75 
   * @throws IndexOutOfBoundsException when error
   */
  @Test
  public void testGet75() throws IndexOutOfBoundsException {    // Henkilot: 75
    Henkilot hen = new Henkilot(); 
    try {
    hen.get(0); 
    fail("Henkilot: 78 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    Henkilo h = new Henkilo(); 
    try {
    hen.add(h); 
    } catch (Exception e) {
    e.getMessage(); 
    }
    Henkilo k = new Henkilo(); 
    assertEquals("From: Henkilot line: 86", true, hen.get(0) == h); 
    assertEquals("From: Henkilot line: 87", false, hen.get(0) == k); 
    try {
    hen.get(1); 
    fail("Henkilot: 88 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAdd104 
   * @throws SailoException when error
   */
  @Test
  public void testAdd104() throws SailoException {    // Henkilot: 104
    Henkilot hen = new Henkilot(); 
    assertEquals("From: Henkilot line: 107", 0, hen.getLkm()); 
    hen.add(new Henkilo()); 
    assertEquals("From: Henkilot line: 109", 1, hen.getLkm()); 
    hen.add(new Henkilo()); 
    assertEquals("From: Henkilot line: 111", 2, hen.getLkm()); 
    while (hen.getLkm() <= hen.getMaksimi()-1)  {
    hen.add(new Henkilo()); 
    }
    hen.add(new Henkilo()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedosto165 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedosto165() throws SailoException {    // Henkilot: 165
    Henkilot test = new Henkilot(); 
    test.testiTallennus(); 
    Henkilo yks = new Henkilo(); yks.rekisteroi(); yks.taytaTiedoilla(); 
    Henkilo kaks = new Henkilo(); kaks.rekisteroi(); kaks.taytaTiedoilla(); 
    test.tallenna("test"); 
    test.add(yks); test.add(kaks); 
    test.tallenna("test"); 
    test.alusta(); 
    test.lueTiedosto("test2"); 
    try {
    test.get(0); 
    fail("Henkilot: 177 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); } // varmistaa että nyt on "auki" eri tiedosto
    test.alusta(); 
    test.lueTiedosto("test"); 
    assertEquals("From: Henkilot line: 180", true, yks.toString().equals(test.get(0).toString())); 
    assertEquals("From: Henkilot line: 181", true, kaks.toString().equals(test.get(1).toString())); 
    assertEquals("From: Henkilot line: 182", false, kaks.toString().equals(test.get(0).toString()));  // varmistaa ettei läpimeno johdu testissä olevista ongelmista
    test.poistaTestitiedostot(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLoytyyko271 
   * @throws SailoException when error
   */
  @Test
  public void testLoytyyko271() throws SailoException {    // Henkilot: 271
    Henkilot hen = new Henkilot(); 
    hen.add(new Henkilo("Testi Henkilö")); 
    assertEquals("From: Henkilot line: 275", true, hen.loytyyko("Testi Henkilö")); 
    assertEquals("From: Henkilot line: 276", false, hen.loytyyko("Joku Muu")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsiHenkilo294 
   * @throws SailoException when error
   */
  @Test
  public void testEtsiHenkilo294() throws SailoException {    // Henkilot: 294
    Henkilot hen = new Henkilot(); 
    Henkilo h = new Henkilo("Testi Henkilö"); 
    hen.add(h); 
    assertEquals("From: Henkilot line: 299", true, hen.etsiHenkilo("Testi Henkilö") == h); 
    assertEquals("From: Henkilot line: 300", null, hen.etsiHenkilo("Joku Muu")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsiHenkilo317 
   * @throws SailoException when error
   */
  @Test
  public void testEtsiHenkilo317() throws SailoException {    // Henkilot: 317
    Henkilot hen = new Henkilot(); 
    Henkilo h = new Henkilo(); 
    h.asetaTiedot("" + 5, "Testi Henkilö"); 
    hen.add(h); 
    assertEquals("From: Henkilot line: 323", true, hen.etsiHenkilo(5) == h); 
    assertEquals("From: Henkilot line: 324", false, hen.etsiHenkilo(5) == new Henkilo("Ei Tämä")); 
  } // Generated by ComTest END
}